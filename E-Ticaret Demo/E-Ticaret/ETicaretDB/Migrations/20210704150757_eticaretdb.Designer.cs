// <auto-generated />
using System;
using ETicaretDB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ETicaretDB.Migrations
{
    [DbContext(typeof(ETicaretContext))]
    [Migration("20210704150757_eticaretdb")]
    partial class eticaretdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Turkish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ETicaretDB.Models.AspnetApplication", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LoweredApplicationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ApplicationId")
                        .HasName("PK__aspnet_A__C93A4C9853001CA7")
                        .IsClustered(false);

                    b.HasIndex(new[] { "LoweredApplicationName" }, "UQ__aspnet_A__17477DE42E7B018F")
                        .IsUnique();

                    b.HasIndex(new[] { "ApplicationName" }, "UQ__aspnet_A__309103310BCF8998")
                        .IsUnique();

                    b.ToTable("aspnet_Applications");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetPath", b =>
                {
                    b.Property<Guid>("PathId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoweredPath")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("PathId")
                        .HasName("PK__aspnet_P__CD67DC58A5580190")
                        .IsClustered(false);

                    b.HasIndex("ApplicationId");

                    b.ToTable("aspnet_Paths");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetPersonalizationAllUser", b =>
                {
                    b.Property<Guid>("PathId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("PageSettings")
                        .IsRequired()
                        .HasColumnType("image");

                    b.HasKey("PathId")
                        .HasName("PK__aspnet_P__CD67DC59183F8846");

                    b.ToTable("aspnet_PersonalizationAllUsers");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetPersonalizationPerUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("PageSettings")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<Guid?>("PathId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__aspnet_P__3214EC060D8D8AA5")
                        .IsClustered(false);

                    b.HasIndex("PathId");

                    b.HasIndex("UserId");

                    b.ToTable("aspnet_PersonalizationPerUser");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PropertyNames")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<byte[]>("PropertyValuesBinary")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<string>("PropertyValuesString")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.HasKey("UserId")
                        .HasName("PK__aspnet_P__1788CC4CE6889C66");

                    b.ToTable("aspnet_Profile");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LoweredRoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("RoleId")
                        .HasName("PK__aspnet_R__8AFACE1BBB64E726")
                        .IsClustered(false);

                    b.HasIndex("ApplicationId");

                    b.ToTable("aspnet_Roles");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetSchemaVersion", b =>
                {
                    b.Property<string>("Feature")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompatibleSchemaVersion")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsCurrentVersion")
                        .HasColumnType("bit");

                    b.HasKey("Feature", "CompatibleSchemaVersion")
                        .HasName("PK__aspnet_S__5A1E6BC127B4742D");

                    b.ToTable("aspnet_SchemaVersions");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isadmin")
                        .HasColumnType("bit")
                        .HasColumnName("isadmin");

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LoweredUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MobileAlias")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UserId")
                        .HasName("PK__aspnet_U__1788CC4D161672C4")
                        .IsClustered(false);

                    b.HasIndex("ApplicationId");

                    b.ToTable("aspnet_Users");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetUsersInRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__aspnet_U__AF2760AD755FD473");

                    b.HasIndex("RoleId");

                    b.ToTable("aspnet_UsersInRoles");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetWebEventEvent", b =>
                {
                    b.Property<string>("EventId")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("char(32)")
                        .IsFixedLength(true);

                    b.Property<string>("ApplicationPath")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ApplicationVirtualPath")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Details")
                        .HasColumnType("ntext");

                    b.Property<int>("EventCode")
                        .HasColumnType("int");

                    b.Property<int>("EventDetailCode")
                        .HasColumnType("int");

                    b.Property<decimal>("EventOccurrence")
                        .HasColumnType("decimal(19,0)");

                    b.Property<decimal>("EventSequence")
                        .HasColumnType("decimal(19,0)");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EventTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExceptionType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Message")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("RequestUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("EventId")
                        .HasName("PK__aspnet_W__7944C810AC0AAD31");

                    b.ToTable("aspnet_WebEvent_Events");
                });

            modelBuilder.Entity("ETicaretDB.Models.Begeniler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("BegeniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Puan")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("BegeniId");

                    b.ToTable("Begeniler");
                });

            modelBuilder.Entity("ETicaretDB.Models.Favoriler", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<Guid>("FavoriId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FavoriId");

                    b.ToTable("Favoriler");
                });

            modelBuilder.Entity("ETicaretDB.Models.Kargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SirketAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nchar(150)")
                        .IsFixedLength(true);

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength(true);

                    b.Property<string>("WebSite")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("Kargo");
                });

            modelBuilder.Entity("ETicaretDB.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.Property<int?>("ResimId")
                        .HasColumnType("int")
                        .HasColumnName("ResimID");

                    b.HasKey("Id");

                    b.HasIndex("ResimId");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("ETicaretDB.Models.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.Property<string>("Resimyol")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("resimyol");

                    b.HasKey("Id");

                    b.ToTable("Marka");
                });

            modelBuilder.Entity("ETicaretDB.Models.Musteri", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMail");

                    b.Property<string>("KullaniciAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("Musteri");
                });

            modelBuilder.Entity("ETicaretDB.Models.MusteriAdre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("MusteriId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MusteriID");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("MusteriAdres");
                });

            modelBuilder.Entity("ETicaretDB.Models.OzellikDeger", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nchar(500)")
                        .IsFixedLength(true);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.Property<int>("OzellikTipId")
                        .HasColumnType("int")
                        .HasColumnName("OzellikTipID");

                    b.HasKey("Id");

                    b.ToTable("OzellikDeger");
                });

            modelBuilder.Entity("ETicaretDB.Models.OzellikTip", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nchar(500)")
                        .IsFixedLength(true);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.Property<int>("KategoriId")
                        .HasColumnType("int")
                        .HasColumnName("KategoriID");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("OzellikTip");
                });

            modelBuilder.Entity("ETicaretDB.Models.Resim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyukYol")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("KucukYol")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OrtaYol")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte?>("SiraNo")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.Property<bool?>("Varsayilan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.ToTable("Resim");
                });

            modelBuilder.Entity("ETicaretDB.Models.Sati", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KargoId")
                        .HasColumnType("int")
                        .HasColumnName("KargoID");

                    b.Property<string>("KargoTakipNo")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength(true);

                    b.Property<Guid?>("MusteriId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MusteriID");

                    b.Property<DateTime>("SatisTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("SepetMi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("SiparişDurumId")
                        .HasColumnType("int")
                        .HasColumnName("SiparişDurumID");

                    b.Property<decimal>("ToplamTutar")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("KargoId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("SiparişDurumId");

                    b.ToTable("Satis");
                });

            modelBuilder.Entity("ETicaretDB.Models.SatisDetay", b =>
                {
                    b.Property<int>("SatisId")
                        .HasColumnType("int")
                        .HasColumnName("SatisID");

                    b.Property<int>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.Property<int?>("Adet")
                        .HasColumnType("int");

                    b.Property<decimal?>("Fiyat")
                        .HasColumnType("money");

                    b.Property<double?>("İndirim")
                        .HasColumnType("float");

                    b.HasKey("SatisId", "UrunId");

                    b.HasIndex("UrunId");

                    b.ToTable("SatisDetay");
                });

            modelBuilder.Entity("ETicaretDB.Models.SiparisDurum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Adi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SiparisDurum");
                });

            modelBuilder.Entity("ETicaretDB.Models.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.Property<decimal>("AlisFiyat")
                        .HasColumnType("money");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int")
                        .HasColumnName("KategoriID");

                    b.Property<string>("Marka")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SatisFiyat")
                        .HasColumnType("money");

                    b.Property<DateTime?>("SonKullanmaTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urun");
                });

            modelBuilder.Entity("ETicaretDB.Models.UrunOzellik", b =>
                {
                    b.Property<int>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.Property<string>("Ozellikler")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunId")
                        .HasName("PK_UrunOzellik_1");

                    b.ToTable("UrunOzellik");
                });

            modelBuilder.Entity("ETicaretDB.Models.VwAspnetApplication", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LoweredApplicationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.ToView("vw_aspnet_Applications");
                });

            modelBuilder.Entity("ETicaretDB.Models.VwAspnetProfile", b =>
                {
                    b.Property<int?>("DataSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.ToView("vw_aspnet_Profiles");
                });

            modelBuilder.Entity("ETicaretDB.Models.VwAspnetRole", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LoweredRoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.ToView("vw_aspnet_Roles");
                });

            modelBuilder.Entity("ETicaretDB.Models.VwAspnetUser", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LoweredUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MobileAlias")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.ToView("vw_aspnet_Users");
                });

            modelBuilder.Entity("ETicaretDB.Models.VwAspnetUsersInRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.ToView("vw_aspnet_UsersInRoles");
                });

            modelBuilder.Entity("ETicaretDB.Models.VwAspnetWebPartStatePath", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoweredPath")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("PathId")
                        .HasColumnType("uniqueidentifier");

                    b.ToView("vw_aspnet_WebPartState_Paths");
                });

            modelBuilder.Entity("ETicaretDB.Models.VwAspnetWebPartStateShared", b =>
                {
                    b.Property<int?>("DataSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("PathId")
                        .HasColumnType("uniqueidentifier");

                    b.ToView("vw_aspnet_WebPartState_Shared");
                });

            modelBuilder.Entity("ETicaretDB.Models.VwAspnetWebPartStateUser", b =>
                {
                    b.Property<int?>("DataSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("PathId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.ToView("vw_aspnet_WebPartState_User");
                });

            modelBuilder.Entity("ETicaretDB.Models.Yorumlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.Property<Guid>("YorumId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.HasIndex("YorumId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetPath", b =>
                {
                    b.HasOne("ETicaretDB.Models.AspnetApplication", "Application")
                        .WithMany("AspnetPaths")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK__aspnet_Pa__Appli__6D0D32F4")
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetPersonalizationAllUser", b =>
                {
                    b.HasOne("ETicaretDB.Models.AspnetPath", "Path")
                        .WithOne("AspnetPersonalizationAllUser")
                        .HasForeignKey("ETicaretDB.Models.AspnetPersonalizationAllUser", "PathId")
                        .HasConstraintName("FK__aspnet_Pe__PathI__6E01572D")
                        .IsRequired();

                    b.Navigation("Path");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetPersonalizationPerUser", b =>
                {
                    b.HasOne("ETicaretDB.Models.AspnetPath", "Path")
                        .WithMany("AspnetPersonalizationPerUsers")
                        .HasForeignKey("PathId")
                        .HasConstraintName("FK__aspnet_Pe__PathI__6EF57B66");

                    b.HasOne("ETicaretDB.Models.AspnetUser", "User")
                        .WithMany("AspnetPersonalizationPerUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__aspnet_Pe__UserI__22751F6C");

                    b.Navigation("Path");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetProfile", b =>
                {
                    b.HasOne("ETicaretDB.Models.AspnetUser", "User")
                        .WithOne("AspnetProfile")
                        .HasForeignKey("ETicaretDB.Models.AspnetProfile", "UserId")
                        .HasConstraintName("FK__aspnet_Pr__UserI__236943A5")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetRole", b =>
                {
                    b.HasOne("ETicaretDB.Models.AspnetApplication", "Application")
                        .WithMany("AspnetRoles")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK__aspnet_Ro__Appli__71D1E811")
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetUser", b =>
                {
                    b.HasOne("ETicaretDB.Models.AspnetApplication", "Application")
                        .WithMany("AspnetUsers")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK__aspnet_Us__Appli__25518C17")
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetUsersInRole", b =>
                {
                    b.HasOne("ETicaretDB.Models.AspnetRole", "Role")
                        .WithMany("AspnetUsersInRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__aspnet_Us__RoleI__73BA3083")
                        .IsRequired();

                    b.HasOne("ETicaretDB.Models.AspnetUser", "User")
                        .WithMany("AspnetUsersInRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__aspnet_Us__UserI__2739D489")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ETicaretDB.Models.Begeniler", b =>
                {
                    b.HasOne("ETicaretDB.Models.Musteri", "Begeni")
                        .WithMany("Begenilers")
                        .HasForeignKey("BegeniId")
                        .HasConstraintName("FK_Begeniler_Musteri")
                        .IsRequired();

                    b.Navigation("Begeni");
                });

            modelBuilder.Entity("ETicaretDB.Models.Favoriler", b =>
                {
                    b.HasOne("ETicaretDB.Models.Musteri", "Favori")
                        .WithMany("Favorilers")
                        .HasForeignKey("FavoriId")
                        .HasConstraintName("FK_Favoriler_Musteri")
                        .IsRequired();

                    b.Navigation("Favori");
                });

            modelBuilder.Entity("ETicaretDB.Models.Kategori", b =>
                {
                    b.HasOne("ETicaretDB.Models.Resim", "Resim")
                        .WithMany("Kategoris")
                        .HasForeignKey("ResimId")
                        .HasConstraintName("FK_Kategori_Resim");

                    b.Navigation("Resim");
                });

            modelBuilder.Entity("ETicaretDB.Models.Musteri", b =>
                {
                    b.HasOne("ETicaretDB.Models.AspnetUser", "IdNavigation")
                        .WithOne("Musteri")
                        .HasForeignKey("ETicaretDB.Models.Musteri", "Id")
                        .HasConstraintName("FK_Musteri_aspnet_Users")
                        .IsRequired();

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("ETicaretDB.Models.MusteriAdre", b =>
                {
                    b.HasOne("ETicaretDB.Models.Musteri", "Musteri")
                        .WithMany("MusteriAdres")
                        .HasForeignKey("MusteriId")
                        .HasConstraintName("FK_MusteriAdres_Musteri")
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("ETicaretDB.Models.OzellikTip", b =>
                {
                    b.HasOne("ETicaretDB.Models.OzellikDeger", "IdNavigation")
                        .WithOne("OzellikTip")
                        .HasForeignKey("ETicaretDB.Models.OzellikTip", "Id")
                        .HasConstraintName("FK_OzellikTip_OzellikDeger")
                        .IsRequired();

                    b.HasOne("ETicaretDB.Models.Kategori", "Kategori")
                        .WithMany("OzellikTips")
                        .HasForeignKey("KategoriId")
                        .HasConstraintName("FK_OzellikTip_Kategori")
                        .IsRequired();

                    b.Navigation("IdNavigation");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("ETicaretDB.Models.Resim", b =>
                {
                    b.HasOne("ETicaretDB.Models.Urun", "Urun")
                        .WithMany("Resims")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_Resim_Urun");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("ETicaretDB.Models.Sati", b =>
                {
                    b.HasOne("ETicaretDB.Models.Kargo", "Kargo")
                        .WithMany("Satis")
                        .HasForeignKey("KargoId")
                        .HasConstraintName("FK_Satis_Kargo");

                    b.HasOne("ETicaretDB.Models.Musteri", "Musteri")
                        .WithMany("Satis")
                        .HasForeignKey("MusteriId")
                        .HasConstraintName("FK_Satis_Musteri");

                    b.HasOne("ETicaretDB.Models.SiparisDurum", "SiparişDurum")
                        .WithMany("Satis")
                        .HasForeignKey("SiparişDurumId")
                        .HasConstraintName("FK_Satis_SiparisDurum");

                    b.Navigation("Kargo");

                    b.Navigation("Musteri");

                    b.Navigation("SiparişDurum");
                });

            modelBuilder.Entity("ETicaretDB.Models.SatisDetay", b =>
                {
                    b.HasOne("ETicaretDB.Models.Sati", "Satis")
                        .WithMany("SatisDetays")
                        .HasForeignKey("SatisId")
                        .HasConstraintName("FK_SatisDetay_Satis")
                        .IsRequired();

                    b.HasOne("ETicaretDB.Models.Urun", "Urun")
                        .WithMany("SatisDetays")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_SatisDetay_Urun")
                        .IsRequired();

                    b.Navigation("Satis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("ETicaretDB.Models.Urun", b =>
                {
                    b.HasOne("ETicaretDB.Models.Kategori", "Kategori")
                        .WithMany("Uruns")
                        .HasForeignKey("KategoriId")
                        .HasConstraintName("FK_Urun_Kategori");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("ETicaretDB.Models.UrunOzellik", b =>
                {
                    b.HasOne("ETicaretDB.Models.Urun", "Urun")
                        .WithOne("UrunOzellik")
                        .HasForeignKey("ETicaretDB.Models.UrunOzellik", "UrunId")
                        .HasConstraintName("FK_UrunOzellik_Urun")
                        .IsRequired();

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("ETicaretDB.Models.Yorumlar", b =>
                {
                    b.HasOne("ETicaretDB.Models.Urun", "Urun")
                        .WithMany("Yorumlars")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_Yorumlar_Urun");

                    b.HasOne("ETicaretDB.Models.Musteri", "Yorum")
                        .WithMany("Yorumlars")
                        .HasForeignKey("YorumId")
                        .HasConstraintName("FK_Yorumlar_Musteri")
                        .IsRequired();

                    b.Navigation("Urun");

                    b.Navigation("Yorum");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetApplication", b =>
                {
                    b.Navigation("AspnetPaths");

                    b.Navigation("AspnetRoles");

                    b.Navigation("AspnetUsers");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetPath", b =>
                {
                    b.Navigation("AspnetPersonalizationAllUser");

                    b.Navigation("AspnetPersonalizationPerUsers");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetRole", b =>
                {
                    b.Navigation("AspnetUsersInRoles");
                });

            modelBuilder.Entity("ETicaretDB.Models.AspnetUser", b =>
                {
                    b.Navigation("AspnetPersonalizationPerUsers");

                    b.Navigation("AspnetProfile");

                    b.Navigation("AspnetUsersInRoles");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("ETicaretDB.Models.Kargo", b =>
                {
                    b.Navigation("Satis");
                });

            modelBuilder.Entity("ETicaretDB.Models.Kategori", b =>
                {
                    b.Navigation("OzellikTips");

                    b.Navigation("Uruns");
                });

            modelBuilder.Entity("ETicaretDB.Models.Musteri", b =>
                {
                    b.Navigation("Begenilers");

                    b.Navigation("Favorilers");

                    b.Navigation("MusteriAdres");

                    b.Navigation("Satis");

                    b.Navigation("Yorumlars");
                });

            modelBuilder.Entity("ETicaretDB.Models.OzellikDeger", b =>
                {
                    b.Navigation("OzellikTip");
                });

            modelBuilder.Entity("ETicaretDB.Models.Resim", b =>
                {
                    b.Navigation("Kategoris");
                });

            modelBuilder.Entity("ETicaretDB.Models.Sati", b =>
                {
                    b.Navigation("SatisDetays");
                });

            modelBuilder.Entity("ETicaretDB.Models.SiparisDurum", b =>
                {
                    b.Navigation("Satis");
                });

            modelBuilder.Entity("ETicaretDB.Models.Urun", b =>
                {
                    b.Navigation("Resims");

                    b.Navigation("SatisDetays");

                    b.Navigation("UrunOzellik");

                    b.Navigation("Yorumlars");
                });
#pragma warning restore 612, 618
        }
    }
}
